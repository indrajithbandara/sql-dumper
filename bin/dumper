#!/usr/bin/env php
<?php

use Symfony\Component\Console\Application;
use Pimple\Container;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use DBDump\Lib\Config;
use DBDump\Database\Connection;
use DBDump\Commands\DumpDatabase;
use DBDump\Commands\RestoreDatabase;

// Detect source location
$autoload = [
    __DIR__ . '/../../../autoload.php',
    __DIR__ . '/../vendor/autoload.php'
];

$loaded = false;
for ($i = 0; $i < count($autoload); $i++) {
    if (file_exists($autoload[$i])) {
        require $autoload[$i];
        $loaded = true;
        break;
    }
}
if (!$loaded) {
    die(
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
}

$cliApp = new Application();

$container = new Container();

$container['config'] = function ($container) {

    $configs = [
        '/config.yml',
        '/config/config.yml',
    ];

    for ($i = 0; $i < count($configs); $i++) {

        $configPath = getcwd() . $configs[$i];

        if (file_exists($configPath)) {
            return new Config($container, $configPath);
        }
    }

    die('Config file is not found!' . PHP_EOL);
};

$container['connection'] = function ($container) {
    
    $config = $container['config'];
    $connection = new Connection();
    $connection->setHostName($config->get('database.hostname'));
    $connection->setUserName($config->get('database.username'));
    $connection->setDatabase($config->get('database.database'));
    $connection->setPassword($config->get('database.password'));
    
    return $connection;
};

//Attach Commands
$cliApp->add(new DumpDatabase($container));
$cliApp->add(new RestoreDatabase($container));

$cliApp->run();
